version: 2

build-distro-bin: &build-distro-bin
  machine: true
  steps:
    - checkout
    - echo $CIRCLE_JOB
    # cannot interpolate env var and use as a cache key so just copy the Dockerfile to another filename
    - run: cp docker/distro_release/Dockerfile.$CIRCLE_JOB docker/distro_release/Dockerfile
    - restore_cache:
        keys:
        - v1-{{ .Environment.CIRCLE_JOB }}-image-{{ checksum "docker/distro_release/Dockerfile" }}
    - run:
        name: load or build docker image
        command: |
          if [[ -e ~/$CIRCLE_JOB.tar ]]; then
            docker load -i ~/$CIRCLE_JOB.tar
          else
            docker build --rm=false -t $CIRCLE_JOB -f docker/distro_release/Dockerfile.$CIRCLE_JOB docker/distro_release/
            docker save $CIRCLE_JOB > ~/$CIRCLE_JOB.tar
          fi
    - save_cache:
        paths:
          - ~/{{ .Environment.CIRCLE_JOB }}.tar
        key: v1-{{ .Environment.CIRCLE_JOB }}-image-{{ checksum "docker/distro_release/Dockerfile" }}
    - restore_cache:
        keys:
        - v4-{{ .Environment.CIRCLE_JOB }}-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}
    - run:
        name: build dependencies
        command: |
          docker run -it \
            -v $HOME/.stack:/root/.stack \
            -v $(pwd):/source \
            $CIRCLE_JOB build --allow-different-user --only-snapshot --install-ghc
          sudo chown -R circleci:circleci ~/.stack
    - save_cache:
        paths:
          - "~/.stack"
        key: v4-{{ .Environment.CIRCLE_JOB }}-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}
    - run:
        name: build binary
        command: |
          docker run -it \
            -v $HOME/.stack:/root/.stack \
            -v $(pwd):/source \
            -v /tmp/:/root/.local/bin/ \
            $CIRCLE_JOB build --allow-different-user --copy-bins
    - run:
        name: compress binary
        command: cd /tmp && tar cjf postgrest-$CIRCLE_JOB.tar.xz postgrest
    - persist_to_workspace:
      root: /tmp
      paths:
        - postgrest-{{ .Environment.CIRCLE_JOB }}.tar.xz

jobs:
  build-test:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-stack-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}
      - run:
          name: install stack & dependencies
          command: |
            curl -L https://github.com/commercialhaskell/stack/releases/download/v1.1.2/stack-1.1.2-linux-x86_64.tar.gz | tar zx -C /tmp
            sudo mv /tmp/stack-1.1.2-linux-x86_64/stack /usr/bin
            sudo apt-get update
            sudo apt-get install libgmp-dev
            sudo apt-get install --only-upgrade binutils
            stack setup
            rm -rf $(stack path --dist-dir) $(stack path --local-install-root)
            stack install hlint packdeps cabal-install
      - run:
          name: build src and tests
          command: |
            stack build --fast -j1
            stack build --fast --test --no-run-tests
      - run:
          name: run tests
          command: |
            sudo service postgresql start
            POSTGREST_TEST_CONNECTION=$(test/create_test_db "postgres://circleci@localhost" postgrest_test) stack test
            test/io-tests.sh
      - run:
          name: run linter
          command: git ls-files | grep '\.l\?hs$' | xargs stack exec -- hlint -X QuasiQuotes -X NoPatternSynonyms "$@"
      - run:
          name: extra checks
          command: |
            stack exec -- cabal update
            stack exec --no-ghc-package-path -- cabal install --only-d --dry-run
            stack exec -- packdeps *.cabal || true
            stack exec -- cabal check
            stack haddock --no-haddock-deps
            stack sdist
      - save_cache:
          paths:
            - "~/.stack"
            - ".stack-work"
          key: v1-stack-dependencies-{{ checksum "postgrest.cabal" }}-{{ checksum "stack.yaml" }}

  centos6:
    <<: *build-distro-bin

  centos7:
    <<: *build-distro-bin

  release:
    docker:
      - image: circleci/golang:1.8
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: upload bins to github release
          command: |
            go get -u github.com/tcnksm/ghr
            ghr -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME --replace v0.4.3.0 /tmp

workflows:
  version: 2
  build-test-release:
    jobs:
      - build-test
      - centos6:
          requires:
            - build-test
      - centos7:
          requires:
            - build-test
      - release:
          requires:
            - centos6
            - centos7
